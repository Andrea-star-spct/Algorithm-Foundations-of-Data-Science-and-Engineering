14.influence
关注就是一个有向边，关注了一个网红，所以就会有从该网红到普通观众的一条有向边
用independent cascade model去描述信息的传播	级联
S：信息的传播者
Pvm是用户m会以概率v的概率接受该信息，变为信息的传播者
由于概率会越乘越小，所以在几个步骤之后传播就会结束

当一个v被激活以后，它只有一次机会去激活它的邻居pvw

一个结点最直接的影响力的表现是它的出度，虽然很多尝试以失败告终
Pvw是一个比较难算的数，一般比较随机
很难算它的期望，方差很大，而且该模型很抽象，不能取代实际的网络传播模型
因为submodule，非常好的性质

任意2个点之间稍微变得长一点，这个概率就会变得非常小；总的路径的数量又会非常多，所以期望的方差会非常大

set of k nodes 最终能够期望的激活结点最大，那么是最有影响力的
所以选择种子结点的问题就是网络影响力最大化问题
至少适合结点覆盖问题是一样难的

通过证明f(s)是子模函数，从而可以利用爬山算法
f(s）能够被精确计算，假设，通常采用模拟的方法近似计算

每一步都要选择对它的影响力增加最大的结点
1. f一定是一个单调函数，增加一个新的结点进来以后，可激活的结点期望一定增加
2.是个子模函数
要证明整个的激活函数的期望是一个子模函数，则要证明单个结点被激活的概率的函数也是子模函数		单个结点的被激活的概率是这个图的不同点的实例化
变成最大覆盖问题
就是考虑了概率情况下的子模覆盖问题
f(s)怎么评价
比单纯用度、pagerenak要好

如何加速爬山算法，提供一个思路：怎么对贪心算法进行优化使得实际上的效率比原始爬山算法老老实实执行提升上百倍，找到一篇论文，一个算法实现算法效率的提升或者结果质量的提升。

部署一些传感器，收集到一些信息的数量，数量越多，收益越多，定义一个函数，尽量把传感器部署到不同的位置，使得覆盖的信息最大

有成本，不同的传感器位置成本可能不同
1-1/e的近似比得到是因为不同的位置成本都是1，一样的，但是在这个问题汇总不同的位置成本不一样
在考虑成本的情况下去优化子模函数，
如果我们只考虑收益不考虑成本，得到的结果是任意坏的
拿边际增益除以成本，实际上是计算增加这一个传感器的性价比
也不行
2个都跑，看那个好，把较好的结果作为好的

提升贪心算法的效率，虽然O(NK)
如何加速
把所有元素的边际收益按照从高到低的收益排到优先队列里面，每一次做检测的时候都去优先队列的第一个，然后算它现在实际的边际收益再插回到优先队列，
lazy hill climbing
最大覆盖的问题
优化方法
和最简单的爬山算法去比，优势在哪

在实际中，肯定要>1-1/e

社交网络影响最大化
传感器的布置问题 门店选址问题
爬山算法的1-1/e怎么证，成本不同如何改进
爬山算法实际的性能如何去提升
